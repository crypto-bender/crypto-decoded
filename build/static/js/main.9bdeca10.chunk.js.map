{"version":3,"sources":["Components/TransactionListItem.jsx","Components/TransactionList.jsx","Components/AssetListItem.jsx","Components/RsuiteTable.jsx","Components/AssetList.jsx","Components/TransactionForm.jsx","Components/AssetForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["TransactionListItem","props","react_default","a","createElement","TransactionList","Components_TransactionListItem","AssetListItem","_ref","asset","transactions","setPortfolio","portfolio","total","filter","transaction","coin","reduce","acc","Number","amount","useEffect","prevPortfolio","RsuiteTable","assets","_useState","useState","map","Object","objectSpread","price","_useState2","slicedToArray","dataList","setDataList","console","log","es","data","height","width","align","fixed","resizable","sortable","dataKey","AssetList","i","Components_AssetListItem","key","Components_RsuiteTable","axios","require","TransactionForm","addTransaction","date","setDate","_useState3","_useState4","setAsset","_useState5","_useState6","setPrice","_useState7","_useState8","setAmount","_useState9","_useState10","transactionType","setTransactionType","className","onSubmit","e","event","preventDefault","newTransaction","current","get","then","res","toConsumableArray","concat","createTransaction","type","value","onChange","target","length","Fragment","AssetForm","addAsset","setCoin","exchange","setExchange","ticker","setTicker","address","setAddress","newAsset","prevAssets","createAssetType","required","maxLength","App","addAssets","addTransactions","react_tradingview_widget_default","symbol","Components_AssetForm","Components_TransactionForm","Components_AssetList","Components_TransactionList","adjustPortfolio","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9bdeca10.chunk.js","sourcesContent":["import React from 'react';\n\nfunction TransactionListItem(props) {\n\n  return (\n    <div>\n    </div>\n  )\n}\n\nexport default TransactionListItem;","import React from 'react';\nimport TransactionListItem from './TransactionListItem.jsx';\n\nfunction TransactionList(props) {\n\n  return (\n    <div>\n      <TransactionListItem />\n    </div>\n  )\n}\n\nexport default TransactionList;","import React, { useEffect } from 'react';\n// import Table from './Table.jsx';\nfunction AssetListItem({asset, transactions, portfolio, setPortfolio}) {\n  const total = transactions\n    .filter(transaction => transaction.asset === asset.coin)\n    .reduce((acc, transaction) => {return acc + Number(transaction.amount)}\n  , 0);\n\n  useEffect(()=> {\n    const { coin } = asset;\n    // let newCoin = {coin: total};\n    setPortfolio(prevPortfolio => {prevPortfolio[coin] = total; return prevPortfolio})\n  }, [transactions])\n\n  return\n    // <div>\n    //   {/* <Table coin={asset.coin} amount={total}>\n    //     <span>{asset.coin}</span>\n    //     <span>{total}</span>\n    //   </Table> */}\n    // </div>\n\n}\n\nexport default AssetListItem;","import { Table, Column, HeaderCell, Cell } from 'rsuite-table';\nimport React, { useState, useEffect } from 'react';\nimport \"rsuite-table/dist/css/rsuite-table.css\";\n\nfunction RsuiteTable({assets, portfolio, transactions}) {\n  const [dataList, setDataList] = useState(assets.map((asset)=> {\n    const {coin} = asset;\n    let amount = portfolio[coin];\n    // console.log(portfolio, amount);\n    return {\n      ...asset,\n      amount: amount,\n      price: 'please update oracle'\n    }\n  }))\n  useEffect(()=> {\n    setDataList(()=> assets.map((asset)=> {\n      const {coin} = asset;\n      let amount = portfolio[coin];\n      console.log(portfolio, amount);\n      return {\n        ...asset,\n        amount: amount,\n        price: 'please update oracle'\n      }\n    }))\n  }, [portfolio, transactions, assets])\n\n  return (\n    <Table data={dataList} height={400}>\n      <Column width={100} align=\"center\" fixed resizable sortable>\n        <HeaderCell>Coin</HeaderCell>\n        <Cell dataKey=\"coin\" />\n      </Column>\n      <Column width={100} align=\"center\" fixed resizable sortable>\n        <HeaderCell>Amount</HeaderCell>\n        <Cell dataKey=\"amount\" />\n      </Column>\n      <Column width={100} align=\"center\" fixed resizable sortable>\n        <HeaderCell>Current Price</HeaderCell>\n        <Cell dataKey=\"price\" />\n        {/* need an API call in this cell */}\n      </Column>\n      <Column width={200} align=\"center\" fixed resizable sortable>\n        <HeaderCell>Current Total Value</HeaderCell>\n        <Cell>0</Cell>\n      </Column>\n      <Column width={200} align=\"center\" fixed resizable sortable>\n        <HeaderCell>Net Profit</HeaderCell>\n        <Cell>0</Cell>\n      </Column>\n    </Table>\n  )\n}\n\nexport default RsuiteTable;","import React, { useEffect } from 'react';\nimport AssetListItem from './AssetListItem.jsx';\nimport RsuiteTable from './RsuiteTable.jsx';\n\nfunction AssetList({assets, transactions, portfolio,  setPortfolio}) {\n  //set a state that decides if list is filtered by asset or transaction const []\n  // const total = transactions\n  //   .filter(transaction => transaction.asset === asset.coin)\n  //   .reduce((acc, transaction) => {return acc + Number(transaction.amount)}\n  // , 0);\n\n  useEffect(()=> {\n    // const { coin } = asset;\n    // // let newCoin = {coin: total};\n    // setPortfolio(prevPortfolio => {prevPortfolio[coin] = total; return prevPortfolio})\n  }, [transactions])\n\n  return (\n    <div>\n      {assets.map((asset, i) =>\n      <AssetListItem\n      key={i}\n      asset={asset}\n      transactions={transactions}\n      portfolio={portfolio}\n      setPortfolio={setPortfolio}\n      />\n      )}\n      <RsuiteTable\n        assets={assets}\n        portfolio={portfolio}\n        transactions={transactions} ></RsuiteTable>\n    </div>\n  )\n}\n\nexport default AssetList;","import React, { useState, useEffect } from 'react';\nconst axios = require('axios');\n\nfunction TransactionForm({assets, transactions, addTransaction}) {\n  const [date, setDate] = useState('');\n  const [asset, setAsset] = useState('');\n  const [price, setPrice] = useState('');\n  const [amount, setAmount] = useState('');\n  const [transactionType, setTransactionType] = useState('buy');\n  // useEffect(()=> {\n\n  // }, [assets])\n  const getPrice = (asset) => {\n    return axios.get(`/price/`)\n      .then(res=> {\n        console.log(res);\n        return res;\n      });\n\n  }\n\n  const createTransaction = (event) => {\n    event.preventDefault();\n    let newTransaction = {\n      date: date,\n      asset: asset,\n      price: price,\n      current: getPrice(),\n      amount: amount,\n      transactionType: transactionType\n    }\n    addTransaction([...transactions].concat(newTransaction));\n  }\n\n  return (\n    <form\n      className=\"Transaction-Form\"\n      onSubmit={e => createTransaction(e)}\n    >\n      <p>SUBMIT A NEW TRANSACTION</p>\n      <label>Transaction Date:\n        <input\n          type=\"date\"\n          value={date}\n          onChange={e=> setDate(e.target.value)}\n        />\n      </label><br></br>\n      <label> Select an asset:\n        <select\n          value={asset}\n          onChange={e=> setAsset(e.target.value)}>\n          {assets.length ?\n          <>\n            <option value=\"\"> --Select an Asset!--</option>\n              {assets.map((asset, i) => (\n                <option key={i} value={asset.coin}>{asset.coin}</option>\n              ))}\n            </>:\n            <option>--No Assets Available, Please Add an Asset--</option>}\n        </select>\n      </label><br></br>\n      <label>Price per coin\n      <br></br>\n        <input\n          type=\"text\"\n          value={price}\n          onChange={e=> setPrice(e.target.value)}\n        />\n      </label><br></br>\n      <label> Amount of coins to transact\n        <input\n          type=\"text\"\n          value={amount}\n          onChange={e=> setAmount(e.target.value)}\n        />\n      </label><br></br>\n      <label> Select transaction type\n        <select\n          value={transactionType}\n          onChange={e=> setTransactionType(e.target.value)}\n        >\n          <option value=\"Buy\">Buy</option>\n          <option value=\"Sell\">Sell</option>\n        </select>\n      </label><br></br>\n      <input type=\"submit\" value=\"Track this transaction!\" />\n    </form>\n  )\n}\n\nexport default TransactionForm;","import React, {useState} from 'react';\n\nfunction AssetForm({assets, addAsset}) {\n  const [coin, setCoin] = useState('');\n  const [exchange, setExchange] = useState('');\n  const [ticker, setTicker] = useState('');\n  const [address, setAddress] = useState('');\n\n  const createAssetType = (event) => {\n    event.preventDefault();\n    let newAsset = {\n      coin: coin,\n      exchange: exchange,\n      ticker: ticker,\n      address: address\n    }\n    // if (assets?.length) {\n      addAsset(prevAssets => {\n        return [...prevAssets].concat(newAsset);\n      })\n    // }\n  }\n\n  return (\n    <form\n      className=\"Asset-Form\"\n      onSubmit={(e)=> createAssetType(e)}\n    >\n      <p>TRACK A NEW ASSET</p>\n      <label>\n        Coin:\n        <br></br>\n        <input\n          type=\"text\"\n          value={coin}\n          onChange={(e)=> setCoin(e.target.value)}\n          required\n        />\n      </label>\n      <br></br>\n      {/* <label>\n        exchange:\n        <input\n          type=\"text\"\n          value={chain}\n          onChange={(e)=> setChain(e.target.value)}\n          required\n        />\n      </label>\n      <br></br> */}\n      <label>\n        Ticker Sign:\n        <br></br>\n        <input\n          type=\"text\"\n          value={ticker}\n          onChange={(e)=> setTicker(e.target.value)}\n          required maxLength={5}\n        />\n      </label>\n      <br></br>\n      <label>\n        If held on exchange, which one? {\"(Optional)\"}:\n        <br></br>\n        <input\n          type=\"text\"\n          value={exchange}\n          onChange={(e)=> setExchange(e.target.value)}\n        />\n      </label>\n      <br></br>\n      <label>\n        Add wallet address for future tracking {\"(Optional)\"}:\n        <br></br>\n        <input\n          type=\"text\"\n          value={address}\n          onChange={(e)=> setAddress(e.target.value)}\n        />\n      </label>\n      <br></br>\n      <input type=\"submit\" value=\"Begin Tracking!\"/>\n    </form>\n  )\n}\n\nexport default AssetForm;","import React, { useState } from \"react\";\nimport TradingViewWidget from 'react-tradingview-widget'\nimport TransactionList from './Components/TransactionList.jsx';\nimport AssetList from './Components/AssetList.jsx';\nimport TransactionForm from './Components/TransactionForm.jsx';\nimport AssetForm from './Components/AssetForm.jsx';\n\nexport default function App() {\n  const [ticker, setTickeer] = useState('COINBASE:BTCUSD');\n  const [total, setTotal] = useState(0);\n  const [assets, addAssets] = useState([]);\n  const [transactions, addTransactions] = useState([]);\n  const [portfolio, setPortfolio] = useState({});\n\n  console.log('assets:', assets, 'transactions:',  transactions, 'portfolio:',portfolio);\n  return (\n    <div>\n      <h1>Lets get cryptographic in here!</h1>\n      <div className=\"portfolio-summary\">\n        <span className=\"portfolio-history\">Lightweight chart here for portfolio performance</span>\n        <span className=\"portfolio-top3\"> Top 3 chart here for biggest portfolio allocations</span>\n      </div>\n      <div className=\"explore-and-add\">\n        <p>Explore the titans of blockchain</p>\n\n        <TradingViewWidget className=\"CenterChart\" symbol={ticker} />\n        <div className=\"forms\">\n          {/* <span > */}\n            <AssetForm\n              className=\"AssetForm\"\n              assets={assets}\n              addAsset={addAssets}\n              />\n          {/* </span> */}\n          {/* <span > */}\n            <TransactionForm\n              className=\"TransactionForm\"\n              assets={assets}\n              transactions={transactions}\n              addTransaction={addTransactions}\n            />\n          {/* </span> */}\n        </div>\n      </div>\n      <div className=\"list-all\">\n      {/* this will have two buttons to allow you to list either all assets and amounts or all transactions with details */}\n        <div className=\"sort-by\">\n          {/* this component will hold all the header information for the list view, with each criteria being clickable to sort by */}\n        </div><br></br>\n        <AssetList\n          portfolio={portfolio}\n          setPortfolio={setPortfolio}\n          transactions={transactions}\n          assets={assets}\n        />\n        <TransactionList\n          portfolio={portfolio}\n          adjustPortfolio={setPortfolio}\n          transactions={transactions}\n          assets={assets}\n        />\n        {/* <div className=\"\">\n\n        </div> */}\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}